{"ast":null,"code":"var _jsxFileName = \"/Users/varsh/Documents/Projects/PortalTakeHome/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, TextField, Button, Typography } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [shopifyUrl, setShopifyUrl] = useState(\"\");\n\n  // Validator that removes a trailing slash if it exists,\n  // then ensures the URL ends with \".js\".\n  const ensureJsSuffix = url => {\n    let trimmed = url.trim();\n\n    // 1. Remove trailing slash if present\n    if (trimmed.endsWith(\"/\")) {\n      trimmed = trimmed.slice(0, -1);\n    }\n\n    // 2. Check if it ends with \".js\"; if not, append \".js\"\n    if (!trimmed.endsWith(\".js\")) {\n      trimmed += \".js\";\n    }\n    return trimmed;\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const finalUrl = ensureJsSuffix(shopifyUrl);\n    try {\n      // Send the shopifyUrl to the backend as JSON\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/upload`, {\n        shopify_url: finalUrl\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"Response from backend:\", response.data);\n    } catch (error) {\n      console.error(\"Error uploading URL:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2,\n      maxWidth: 400,\n      margin: \"auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mb: 1\n          },\n          children: \"Shopify Product URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Shopify Product URL\",\n          variant: \"outlined\",\n          value: shopifyUrl,\n          onChange: e => setShopifyUrl(e.target.value),\n          required: true,\n          fullWidth: true,\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NQGus/57XSx2iQs6ri6aGyHpfZk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Box","TextField","Button","Typography","axios","jsxDEV","_jsxDEV","App","_s","shopifyUrl","setShopifyUrl","ensureJsSuffix","url","trimmed","trim","endsWith","slice","handleSubmit","event","preventDefault","finalUrl","response","post","process","env","REACT_APP_BACKEND_URL","shopify_url","headers","console","log","data","error","sx","p","maxWidth","margin","children","onSubmit","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","target","required","fullWidth","type","_c","$RefreshReg$"],"sources":["/Users/varsh/Documents/Projects/PortalTakeHome/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Box, TextField, Button, Typography } from \"@mui/material\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [shopifyUrl, setShopifyUrl] = useState(\"\");\n\n  // Validator that removes a trailing slash if it exists,\n  // then ensures the URL ends with \".js\".\n  const ensureJsSuffix = (url) => {\n    let trimmed = url.trim();\n\n    // 1. Remove trailing slash if present\n    if (trimmed.endsWith(\"/\")) {\n      trimmed = trimmed.slice(0, -1);\n    }\n\n    // 2. Check if it ends with \".js\"; if not, append \".js\"\n    if (!trimmed.endsWith(\".js\")) {\n      trimmed += \".js\";\n    }\n\n    return trimmed;\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const finalUrl = ensureJsSuffix(shopifyUrl);\n    try {\n      // Send the shopifyUrl to the backend as JSON\n      const response = await axios.post(\n        `${process.env.REACT_APP_BACKEND_URL}/upload`,\n        { shopify_url: finalUrl },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      console.log(\"Response from backend:\", response.data);\n    } catch (error) {\n      console.error(\"Error uploading URL:\", error);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        p: 2,\n        maxWidth: 400,\n        margin: \"auto\",\n      }}\n    >\n      <form onSubmit={handleSubmit}>\n        <Box sx={{ mb: 2 }}>\n          <Typography variant=\"body1\" sx={{ mb: 1 }}>\n            Shopify Product URL\n          </Typography>\n          <TextField\n            label=\"Shopify Product URL\"\n            variant=\"outlined\"\n            value={shopifyUrl}\n            onChange={(e) => setShopifyUrl(e.target.value)}\n            required\n            fullWidth\n            sx={{ mb: 2 }}\n          />\n        </Box>\n\n        <Button type=\"submit\" variant=\"contained\">\n          Submit\n        </Button>\n      </form>\n    </Box>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}